swagger: "2.0"
info:
  description: "这是武汉大学测绘学院空间信息研究所下的一份关于应急灾害志愿者地理信息系统后端应用程序接口文档。"  
  title: "Swagger VGI"
  termsOfService: "http://lqian.sgg.whu.edu.cn/terms/"
  contact:
    name: Long Qian
    url: http://lqian.sgg.whu.edu.cn/support/
    email: 372972084@qq.com
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  version: "1.0.0"
host: "lqian.sgg.whu.edu.cn"
basePath: "/v1"
tags:
- name: "user"
  description: "关于用户对象的一些操作"
  externalDocs:
    description: "Find out more about our store"
    url: "http://lqian.sgg.whu.edu.cn/"
schemes:
- "http"
paths:
  /user/login:
    get:
      tags:
      - "user"
      summary: "Logs user into the system"
      description: ""
      operationId: "loginUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "username"
        in: "query"
        description: "The user name for login"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "The password for login in clear text"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
        400:
          description: "Invalid username/password supplied"
  /user/logout:
    get:
      tags:
      - "user"
      summary: "Logs out current logged in user session"
      description: ""
      operationId: "logoutUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
  /user/{username}:
    get:
      tags:
      - "user"
      summary: "Get user by user name"
      description: ""
      operationId: "getUserByName"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "The name that needs to be fetched. Use user1 for testing. "
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Invalid username supplied"
        404:
          description: "User not found"
    put:
      tags:
      - "user"
      summary: "Updated user"
      description: "This can only be done by the logged in user."
      operationId: "updateUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "name that need to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        400:
          description: "Invalid user supplied"
        404:
          description: "User not found"
    delete:
      tags:
      - "user"
      summary: "Delete user"
      description: "This can only be done by the logged in user."
      operationId: "deleteUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "The name that needs to be deleted"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid username supplied"
        404:
          description: "User not found"
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  User:
    type: "object"
    properties:
      username:
        type: "string"
      nickname:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      salt:
        type: "string"
      date_created:
        type: "string"
      token:
        $ref: '#/definitions/Token'
      reset_token:
        type: "string"
      reset_token_expires_millis:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      age:
        type: "string"
      gender:
        type: "string"
      location:
        type: "string"
      occupation:
        type: "string"
      speciality:
        type: "string"
      portrait:
        type: "string"
        format: "binary"
      telephone:
        type: "string"
        description: 志愿者用户电话号码。
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
  Token:
    type: "object"
    properties:
      token:
        type: "string"
        description: Token值。
      date_created:
        type: "string"
        format: "date‐time"
        description: Token创建时间。
    xml:
      name: "Token"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"